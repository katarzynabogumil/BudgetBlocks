// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                 Int       @id @default(autoincrement())
  sub                String    @unique
  firstName          String
  lastName           String?
  nickname           String?
  email              String    @unique
  createdAt          DateTime  @default(now())
  projects           Project[] @relation(name: "owners")
  projectInvitations Project[] @relation(name: "invites")
  upvotedExpenses    Expense[] @relation(name: "upvotes")
  downvotedExpenses  Expense[] @relation(name: "downvotes")
  comments           Comment[] 
}

model Project {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  owners       User[]   @relation(name: "owners")
  invitedUsers User[]   @relation(name: "invites")
  name         String   @db.VarChar(255)
  type         String   @db.VarChar(255)
  budget       Int
  currency     String
  dateFrom     DateTime? 
  dateTo       DateTime?  
  area         Int? 
  location     String?
  noOfGuests   Int?
  occasion     String?
  origin       String?
  destination  String?
  description  String?
  expenses     Expense[]
  categories   ExpCategory[]
}

model Expense {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  project    Project   @relation(fields: [projectId], references: [id])
  projectId  Int
  name       String    @db.VarChar(255)
  cost       Int
  currency   String
  calcCost   Int?
  link       String?
  photo      String?
  notes      String?
  category   ExpCategory   @relation(fields: [categoryId], references: [id])
  categoryId Int
  upvotes    User[]    @relation(name: "upvotes")
  downvotes  User[]    @relation(name: "downvotes")
  comments   Comment[]
}

model ExpCategory {
  id        Int      @id @default(autoincrement())
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  expenses  Expense[]
  orderId   Int
  category  String
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expense   Expense  @relation(fields: [expenseId], references: [id])
  expenseId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  text      String
}